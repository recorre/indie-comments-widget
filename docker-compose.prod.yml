version: '3.8'

services:
  # Backend API Service - Production optimized
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: comment-widget-backend-prod
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - NOCODEBACKEND_API_KEY=${NOCODEBACKEND_API_KEY}
      - INSTANCE=${INSTANCE}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-1000}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-3600}
      - SENTRY_DSN=${SENTRY_DSN}
      - PROMETHEUS_METRICS_ENABLED=true
    volumes:
      - ./backend/logs:/app/logs
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - comment-widget-network

  # Frontend Dashboard Service - Production optimized
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: comment-widget-frontend-prod
    ports:
      - "3000:3000"
    environment:
      - ENVIRONMENT=production
      - BACKEND_URL=${BACKEND_URL}
      - WIDGET_CDN_URL=${WIDGET_CDN_URL}
      - GOOGLE_ANALYTICS_ID=${GOOGLE_ANALYTICS_ID}
      - ENABLE_ANALYTICS=${ENABLE_ANALYTICS:-true}
      - ENABLE_ERROR_REPORTING=${ENABLE_ERROR_REPORTING:-true}
      - SENTRY_DSN=${SENTRY_DSN}
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - comment-widget-network

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: comment-widget-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
      - widget
    restart: unless-stopped
    networks:
      - comment-widget-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: comment-widget-redis-prod
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - comment-widget-network

  # PostgreSQL for analytics
  postgres:
    image: postgres:15-alpine
    container_name: comment-widget-postgres-prod
    environment:
      - POSTGRES_DB=comment_widget
      - POSTGRES_USER=comment_widget
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U comment_widget -d comment_widget"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - comment-widget-network

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  comment-widget-network:
    driver: bridge